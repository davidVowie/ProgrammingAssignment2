## This function will make the variable 
## as x in the imput wheras the matrix is the solution
## and if not, x is equals to NULL
makeCacheMatrix <- function(x = matrix())
      inv <- NULL
      set <- function(x){
            y <<- x
            inv <<- NULL
      }
      get <- function() {x}
      setInverse <- function(inverse) {inv <<- inverse}
      getInverse <- function() {inv}
      list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}
## This will assess you in creating the inversed matrix as
## caches that it will retieve
## and will try again later to prompt
cacheSolve <- function(x, ...){
      inv <- x$getInverse()
      if(!is.null(inv)){
            message("getting cached data")
            return(inv)
      }
      mat <- x$get()
      inv <- solve(mat, ...)
      x$setInverse(inv)
      inv
}
